#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV1D_KERNEL_0 {-61, -46, 22, -9, -103, 26, -12, -59, 54, -70, 16, -58, -24, 50, 33, -18, 17, -85, -63, -12, 48, -68, -10, 18, -79, -62, -5, -55, 41, -6, -26, -40, 60, -59, -15, -14, 24, -16, 61, -67, -35, 1, 5, 18, 1, -29, 77, 18, -23, 80, -18, 47, 92, -56, 3, -39, 29, -41, -48, 81, -51, -24, -1, -74, 43, 15, -12, 53, 64, 6, -5, 72, 15, -31, 21, 75, -24, 87, 13, 0, 78, 22, 75, -5, -64, -3, 6, -3, 93, 27, -67, 19, 26, 3, 82, 51, 45, 76, 41, 88, -43, 88, 0, 3, 75, 54, 55, 23, -49, -43, -79, -34, -15, -8, -41, -27, -1, -64, -22, -10, -88, -66, 6, -88, -51, 43, -38, 14, -73, -69, -73, -83, -19, -15, -66, -29, -8, -8, 81, -39, -17, 46, -71, -53, -19, 0, 50, 36, 39, 83, 32, -53, 58, -16, 64, -45, -27, 14, 16, -44, 57, -57, 66, 32, 46, 50, 91, 17, 14, 93, -37, 74, 76, 30, 72, -20, -23, -44, -15, -13, -6, -2, -43, -50, 72, -13, 28, 37, -27, -53, 31, -3, -31, -51, -24, -11, -21, -27, 34, -36, -44, 75, -22, -30, 47, 6, -79, 58, -76, -6, -18, -66, 56, 70, 2, -26, -40, 43, 31, 49, -25, -41, -61, 34, -19, 2, -3, -50, 58, -31, 21, 88, 47, 55, -57, 85, 40, -25, -28, 22, 10, 36, -4, 36, -46, -68, -13, 35, -7, -12, -42, 29, -62, -15, 47, 24, -21, 84, -13, -79, 44, 3, -34, -70, -37, -85, -87, 37, -33, -36}

#define TENSOR_CONV1D_KERNEL_0_DEC_BITS {8}

#define TENSOR_CONV1D_BIAS_0 {65, 38, -21, -23, 26, 59, 58, -7, 82, 68, 84, 27, -21, -22, 15, 60, -7, -27, 68, 5, 43, 37, 34, -13, -25, 4, -21, 51, 88, 77}

#define TENSOR_CONV1D_BIAS_0_DEC_BITS {9}

#define CONV1D_BIAS_LSHIFT {3}

#define CONV1D_OUTPUT_RSHIFT {8}

#define TENSOR_CONV1D_1_KERNEL_0 {53, -25, 71, 30, 23, -34, 24, -22, -16, 39, 39, -25, 49, 35, 39, 16, -24, -34, -28, -17, -19, 42, -21, -39, 27, 31, -32, 54, 14, 54, 34, 60, -30, -13, -21, -62, 54, -48, 31, -51, 32, -11, -5, -19, 41, -3, -5, -31, -29, -52, 16, 63, 1, -12, -41, -31, 31, 38, 20, 13, 52, 9, -35, 4, 20, 14, 58, -30, 19, 34, 55, 31, 17, -13, 41, 55, -44, -10, -13, -40, 44, 71, 25, -39, -38, 27, -37, 45, 20, 58, 41, -10, 0, 31, 54, 44, -10, -47, 33, -43, 20, 42, -6, -54, 28, 54, 38, 13, -17, 42, -59, 8, 52, 1, 43, 22, -19, -3, -10, 31, 35, -31, -57, 3, 0, -7, -9, 23, 54, -46, 59, 71, 35, -19, -1, 61, 53, -28, -18, -31, 8, 38, -13, 53, -20, 49, 8, -23, 37, -45, -11, 7, -48, 38, 12, -39, -48, -13, 51, 21, -34, 16, 28, -17, -12, 10, -28, 29, 68, 45, -30, -56, 46, 33, -43, 66, 10, 2, -48, -23, 29, -52, 23, -15, -6, 50, 8, 14, -23, 60, 89, 61, -21, -32, 5, 52, 28, -46, -7, 32, -29, -8, -4, -33, -18, 32, -26, 42, 5, -17, 25, 28, -44, -66, 77, 39, 37, -6, 83, 21, 44, 16, -75, -28, -42, 4, 20, 6, 9, -30, 51, 17, -40, -28, -46, 5, 44, -11, 58, 14, -37, 0, -49, 3, 20, 13, -13, 33, 82, 72, 80, -18, -50, -24, -73, -52, 39, 15, 61, 64, 43, -25, 16, 36, -41, -33, -19, 19, 55, -14, 48, -15, 44, 24, 1, -31, -4, -6, -11, -77, -14, -13, 34, 13, 3, 33, 43, -41, 20, -20, -33, 53, 67, -34, -23, 52, -40, 17, 2, 23, 38, -60, -29, -25, -56, -55, 40, -44, 15, -35, 34, 17, 26, 3, -16, 22, 4, -48, 35, -32, -25, -15, 34, 8, -51, 56, -28, -21, 18, -22, -11, -48, -33, -53, -19, 7, -26, 51, 16, -29, -20, 65, -53, -46, -73, 24, -37, -61, 51, -12, 16, 28, -4, 72, -76, 43, 0, -24, 1, 17, 66, 33, -27, 7, 26, -42, 46, 23, 35, -27, -43, -44, 43, 5, -26, -26, -47, 12, -31, -40, -51, -51, -44, 58, 18, -30, -8, 18, 46, 65, 72, 39, -16, 33, -13, -63, 75, 19, -42, -31, -65, -41, 27, -47, 2, 65, -19, -70, -1, -23, 10, -24, 58, 26, 29, 39, -64, -3, 57, -15, -1, -47, -28, -33, 45, -11, -13, -67, 37, -37, -64, 14, 41, -26, 53, 6, -2, -33, 21, -18, -60, -20, 52, -26, -57, -43, -40, -13, -38, 42, 19, 35, 68, 34, 14, 44, -7, -26, -25, -37, -48, 16, 19, 27, 58, -47, 20, -41, -29, -19, -7, -2, -52, -21, 22, 44, 36, 21, 64, 65, -35, -2, 24, 45, -15, -26, 10, 5, -11, 22, 41, -35, 42, -39, 64, -23, 5, 53, 23, -59, 10, -28, 12, -35, 33, -5, 19, 45, -20, 19, 38, -4, 28, 64, 48, -29, 21, 25, 6, 27, 49, -40, -37, 49, 30, -52, 39, -45, -5, 43, -29, 17, 60, -34, 17, -6, -13, -13, -47, -8, -5, -7, 39, -21, -47, 23, -22, -11, 12, -49, 17, -38, -36, -53, -36, -64, -23, 8, 39, -50, 1, -19, 25, -12, 25, 10, 41, 13, -37, -40, 37, 52, 30, -43, -20, -2, 21, -27, 5, -28, -51, -39, -50, -24, 35, -28, 29, -41, -52, -52, 39, -20, 3, 11, 40, -23, -30, -23, 11, -16, -30, -12, 31, 22, -1, 27, -51, 19, -1, -44, 11, -30, -8, 33, -38, -36, -14, 57, -3, -65, 42, 29, -1, -26, 30, 0, 31, 30, -10, 47, 23, 28, 28, -41, -21, -14, 1, 39, 14, -45, -62, 15, -17, -38, 50, 56, -33, 60, 15, -29, -5, -26, 15, -27, -28, 40, 2, 18, -43, 75, -50, -9, -17, -16, 36, 40, -10, -31, -12, 3, -5, -1, 18, -54, 61, 60, -17, 17, -54, 22, 48, 48, 17, 40, -38, -46, 3, 28, -59, -15, 33, 56, 41, -59, -29, -33, -37, -60, 28, -27, -31, -10, 57, 6, 40, 10, 22, -13, -41, 50, 47, 54, 46, 60, -8, 16, -49, 0, 19, 61, -8, 54, 46, -23, -17, 28, 58, 3, 5, 39, 48, -3, 34, -38, 65, -38, -6, 13, 14, -12, 43, 48, -8, -22, -36, 37, -15, 52, -3, 50, -1, -30, 32, -27, -26, 43, 33, -1, 32, -31, 32, -35, 13, 64, 18, 39, -24, 5, 31, -61, 48, 44, -22, -31, 53, -58, 42, -46, 17, 18, 61, -33, 58, -36, 11, -3, 13, 58, 52, 50, 47, 5, 15, 60, 12, -37, -36, 4, 30, -31, 37, 10, 30, -40, -31, 9, -2, 51, -16, 3, -70, -37, 5, 19, -36, 55, -5, 34, -24, 31, -8, 32, 24, -9, 15, 13, -35, -26, 67, 62, 79, 39, 15, -15, -7, 22, 54, -24, -13, 22, -10, 62, -26, -42, -37, 92, -10, 50, 10, -3, 8, -31, 37, -34, -32, -18, -32, 53, 73, -31, 61, -31, 63, -1, 52, 4, 9, 9, -8, -34, -25, 30, 23, 5, -42, 5, -50, -37, -42, 58, 67, 5, 10, 47, 6, -25, 8, 60, 19, 52, 83, 16, 15, -47, 48, -19, 12, -22, -47, 17, -33, -18, -32, 4, 5, -9, 22, -44, -52, 4, 40, -46, 34, 35, 62, -4, -57, -19, 44, 66, 70, -39, 52, -18, -45, -31, -70, -4, 8, 80, 31, 47, -71, -63, -48, 63, 6, 30, 38, 18, 18, -11, -2, -59, 10, 49, 30, -40, 75, 19, 22, 19, 60, -7, 21, -11, 28, 24, 21, 28, -20, -28, -26, 34, -24, 75, -21, -17, 24, -13, -14, 64, -60, -38, 6, 60, 2, -2, 77, -15, 31, -7, 11, 18, -8, 80, 32, 35, 20, 31, 28, -10, 2, -27, -3, 4, -52, 25, -17, -1, -13, 56, 33, -8, 17, 25, -27, 25, 34, 36, 45, 46, 46, -25, 15, 17, -38, 45, -27, 29, -55, 55, 35, 4, -35, 38, -43, -9, 61, -50, -57, 52, 34, 38, 27, 14, 5, 18, 33, 15, -4, -3, 61, 25, -25, 12, -32, 26, -65, -7, -51, 31, -17, 7, -22, -22, -57, -30, 48, -13, -40, 9, -39, -16, 6, -25, -16, 52, -19, -7, 48, 51, 7, 59, 12, 17, 45, 16, 38, 47, -30, 19, -35, 10, -25, 45, -44, 3, -49, 38, -20, -38, 23, 32, 43, -44, -61, 41, -7, -11, 32, 42, -48, -43, -6, -30, -26, -26, -40, -11, 31, 59, -2, 34, 35, -1, 32, -30, 11, 41, 44, 5, 8, 66, 42, -64, 26, 22, 7, 40, 23, 18, -65, -32, -3, -4, -14, 10, 54, -42, 41, -27, 4, 55, 7, -12, 53, 41, -49, 72, 10, -48, 55, -5, -2, -26, -35, 64, -57, 11, 49, -12, -34, 40, 32, -17, 58, 20, -11, 55, -7, 15, -16, -7, -14, 23, -34, -62, 36, -16, 35, 7, 18, -20, -40, -16, -13, 16, 9, 4, 35, -10, 59, 61, -11, 47, -18, -13, -26, 18, 34, -23, 2, -30, 3, -53, 18, -55, -25, -62, -46, 34, -2, 63, 68, 69, -9, -16, -11, -19, -38, 0, 20, 52, 23, -22, 25, -22, -23, 60, 0, -11, 41, -9, 33, 45, -59, -15, -37, -34, 27, 19, 31, 59, 26, 37, -1, -3, -45, 51, 12, -4, 22, 11, 44, -21, -46, -45, -63, 66, 80, -28, 60, 19, 59, 14, 25, -16, 23, -52, 55, -21, -26, 21, -32, -17, 72, 7, -72, 11, -71, -35, 0, 7, 35, -53, -23, 24, -17, -7, 18, 25, 12, -9, 1, -11, 65, 18, -22, -45, -24, 35, 25, 70, -58, -48, 18, -52, -11, -6, -55, 30, -68, 16, -4, -36, 3, -52, 77, -81, 55, -50, 68, 65, -19, -21, 19, 75, 69, 0, -17, 60, -13, 60, -54, -49, 29, 24, -58, 0, 4, -36, -38, 12, 34, -39, 35, -12, 26, -38}

#define TENSOR_CONV1D_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_CONV1D_1_BIAS_0 {70, 8, 77, -14, 52, -26, 11, -26, 7, -10, 71, -17, -18, -9, 9}

#define TENSOR_CONV1D_1_BIAS_0_DEC_BITS {9}

#define CONV1D_1_BIAS_LSHIFT {3}

#define CONV1D_1_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_KERNEL_0 {52, 31, 17, 56, -18, -21, -8, 5, -65, -29, -32, 22, -10, 8, -28, -18, -21, -6, -2, 15, -19, -2, -23, 10, 58, 25, -48, -19, 2, -41, -13, 0, 3, 26, -1, -10, 52, 3, 27, -21, 5, -30, -54, 5, 27, -35, 14, -29, 3, 11, 41, 57, 5, -18, 17, -59, -15, 9, 24, 18, -42, -11, -2, 25, -50, -12, -47, -11, -31, -8, -44, -41, -13, 32, 5, 15, 37, 1, 42, -25, 50, -40, 13, -44, 32, -20, -18, 16, 30, -21, 4, 34, -22, 31, -39, -17, 17, -7, -21, 3, 13, 37, 11, 12, -44, -27, 2, -40, 3, -4, -39, -24, -58, -54, 17, 8, -28, -29, -16, -4, 45, 34, -64, 50, -4, -2, 8, -13, 33, 36, 6, -16, 12, 29, -5, 34, -36, -18, -10, 0, -29, -35, 7, -18, 14, -34, -20, -21, -29, -28, -42, 14, -5, 17, -4, -5, -30, -16, -20, -15, -49, -24, 17, 15, 35, 13, -35, -50, -27, 17, -43, -24, 11, -20, -4, 14, 20, 12, -30, 31, -13, -47, 8, 48, -27, -21, 21, 15, -57, -32, 21, 33, -9, -33, -9, 1, 4, 6, -11, -44, -39, 24, 20, -16, -33, 20, 31, -17, -38, -39, 32, 43, 13, 0, -10, -39, 7, -19, -29, 37, 4, -4, 31, 20, -63, 21, 10, -9, -10, -16, -31, -36, -17, -41, 21, -9, 4, 4, -42, -9, 10, -7, 35, 31, -50, -16, -16, 24, -18, 0, -29, -15, 41, 15, 38, -10, -52, -41, 35, -28, -3, 5, -19, -22, 38, -41, -60, -22, 2, 9, 4, -5, -23, -4, -21, -7, -16, 12, -21, -36, 5, 54, -31, 15, 12, 30, -6, 10, 8, 11, 57, -36, 46, 9, 9, 24, -18, 0, 13, -20, -62, 18, -32, -33, -56, 16, 30, 14, 2, -15, -15, 15, 12, 5, 41, -45, 47, 11, -30, 20, -16, 28, 20, -36, -32, 11, -27, -43, -12, 17, 30, -17, 25, -29, -17, -36, -16, 60, 8, -2, 16, -54, 14, -26, -27, 56, -26, -42, -51, -61, -15, -4, -25, -54, -6, -22, 0, 14, -47, -7, 30, -7, -19, -26, -8, 30, 20, -22, 28, -1, 4, -31, 18, -18, 18, -7, 29, 1, -6, -26, 2, -4, 16, -46, -6, 15, 22, 31, -20, -9, 27, 7, 23, -52, -40, -30, -42, -32, -6, -36, -12, -40, -18, 23, 4, -11, -44, -34, -28, -26, -26, -27, -43, -9, -53, -9, -12, 30, -14, -23, 18, 20, -17, 32, 58, -51, -26, 14, -45, -37, 28, -7, 35, -24, 4, -7, 14, 31, 5, -18, 27, -45, 8, -25, 45, 18, -6, -24, -28, -22, -34, -16, -8, -29, -2, -18, 16, 27, -16, -44, -2, -40, 3, -11, -54, -30, -41, -2, -9, -19, -18, -44, -5, -21, 32, 23, -26, 9, -8, -13, 33, -15, 58, -19, 29, -55, 1, -37, -13, -11, 11, -6, -3, -12, -9, -38, 65, -37, -14, -43, -14, 6, 18, 40, -43, 21, 8, -22, 14, 0, -14, 11, -52, 3, 4, -4, -39, 0, 40, -41, -25, -32, -50, 6, -69, 6, 1, -60, -30, 12, 22, 6, -40, 15, -7, 8, -6, 5, 9, -1, 17, -53, -4, -15, -21, -12, 14, -49, 41, -31, 14, -58, -14, 14, 39, -32, 12, -40, -10, -32, -42, 20, -8, -28, -20, -15, -25, -25, -33, 12, -13, -12, -39, 46, -44, -19, -42, -3, 11, -28, -23, -35, -21, 15, -26, -24, -2, -30, -4, -20, -56, -13, -18, 8, -37, 3, 60, -2, 0, 4, 40, 14, -34, -68, 8, 7, -18, -24, -8, -26, 43, -29, 33, -55, 9, -31, 23, -44, -48, -44, -41, -23, -44, -9, -16, 39, -14, 4, 22, 2, 14, 5, 1, -55, 20, -35, 14, 44, -7, 13, -29, -56, -12, 26, 42, -42, -17, 13, -53, -34, -14, -35, -18, -26, 33, 22, 29, -16, 29, -60, 20, 20, 0, -22, -27, 1, 1, -68, -9, -13, 58, -31, -22, -8, -45, 17, -7, 7, -37, 42, 24, -31, 0, 16, -14, 29, 8, 20, 15, -77, 12, -50, -25, 21, -12, -9, 14, -32, -63, -9, -24, -3, -1, -6, -33, -57, -19, -26, 31, 29, 1, 52, -41, 2, 7, 27, -13, 47, -19, -46, -10, 2, -26, -47, -4, 8, 5, -28, -21, -41, -21, -58, 48, -41, 21, -10, 70, -4, -18, 24, -36, -16, -11, 39, -54, -8, 2, -27, 10, 12, -49, 22, -22, 1, -29, -46, -20, 20, -24, 47, -2, -20, -13, -65, -10, 31, 1, 21, -38, 35, 0, -50, -2, 32, -26, 3, 8, -53, -4, 43, 35, 43, -8, -28, -63, -39, -34, -35, -11, -35, 51, -21, -51, 16, 26, 1, 13, -70, -30, 32, 14, 15, -32, -44, -48, -20, -33, 53, -18, 28, 11, -20, 19, 22, -39, -19, 12, 0, -49, -62, -28, 40, 18, 40, 24, -31, -47, -18, -28, -8, -15, -35, 2, -46, -17, -25, -3, 33, -10, 22, -10, -25, 8, -68, -66, 18, -2, -41, -19, -10, 28, 18, -19, -47, 21, 28, -56, -23, -14, 3, 25, -41, -45, -34, 13, 42, -32, 11, -17, 10, 0, 9, -11, -32, 32, -45, 6, 17, 4, -15, -18, 17, 10, -10, 5, 51, -9, -39, -17, -37, -38, -4, -41, 0, 8, 15, -14, 7, -50, -31, -64, -50, 15, -7, -45, -28, -7, -14, -38, 35, 26, -70, -18, -61, -54, 20, 11, -5, 7, -17, -12, -26, 1, -30, 40, -16, -43, 4, 13, -14, -23, 4, -8, 3, -12, -14, -2, -4, -6, 43, -55, -9, 30, 12, 41, -20, 46, -6, 37, -10, 21, 5, -6, -3, -14, -11, -64, 25, -20, -3, -12, -16, 11, -34, -24, -68, 17, 6, 29, -11, 9, 2, 2, -19, 16, 13, 62, 38, 23, 49, -46, -1, 9, 48, -30, -29, 2, 32, -24, -17, -40, 28, -49, -63, -5, -41, -32, -54, 13, -23, -3, -65, 25, -41, 11, 11, 21, -12, -27, -33, -45, 1, -38, 6, -34, -45, 71, 34, 8, 48, -40, -10, 12, -16, 4, 23, 5, -25, 21, 37, 6, 57, 10, -42, -17, 57, -25, -19, 5, 18, -9, 8, 3, 12, -29, -9, 17, -29, -15, 0, -33, -29, -17, -32, -18, -53, -43, -53, -23, 0, 1, -34, 34, 31, 49, -18, -32, 8, -15, -11, -34, -32, 12, -15, -8, 9, -32, -16, -37, -30, -8, -49, -7, -19, -59, 31, 23, -14, 35, -21, -22, 21, 3, 10, -13, -42, 26, 2, -40, -14, 21, -10, 14, -16, -39, 14, -16, 13, 15, 35, -42, -9, -27, 48, 13, -3, 3, -18, -52, 7, 30, -13, 18, 16, -4, -44, 19, -22, -10, 1, 12, -27, -35, -30, -45, -41, -8, 12, -2, -36, -39, 1, -26, -18, 6, -23, 47, -28, -55, -17, 30, -39, -18, 1, 14, 20, 4, 7, -16, -20, 1, 12, -45, 16, -51, 7, -25, 2, 35, -4, 29, -40, -25, 25, -46, -59, -27, 10, -5, -54, -26, -55, -28, -25, -19, -14, 3, 19, -14, -14, 11, -42, -40, -20, 38, 8, 5, 19, 41, 13, -27, 30, -8, -60, -5, -10, -13, -14, -30, -43, -3, 27, -42, 25, -7, -31, -34, 40, 6, 17, 4, -6, -23, 22, -43, 33, 14, 14, -23, 25, 5, 12, -53, 20, -33, 7, -20, -48, -3, -28, 5, -13, -5, -25, -6, -58, -27, -13, -7, 2, 14, -14, -39, -31, 19, 43, -42, 7, 2, -12, -25, -43, -26, -6, 41, -38, 18, 15, 23, 23, -43, -26, -4, -12, 29, 30, 34, -41, -28, -7, -50, -34, 32, 25, 42, -22, 20, 3, 0, 12, 18, 23, 45, -29, -12, 7, -15, 0, -51, 1, -17, -28, -18, 0, -1, -7, 24, 23, 12, -19, 17, 28, 35, 19, -11, 27, -39, -16, -27, 0, 7, 9, 40, -8, -3, 30, -9, 20, 1, 5, -2, 29, -14, -11, -37, -32, 19, 5, -20, 14, 30, 36, 29, 43, 8, 21, -29, -33, -61, -7, -22, -27, 28, 10, -38, 7, -19, 29, -30, 12, 0, -45, 19, -21, -37, 13, -18, 28, 24, -11, -4, 17, 5, 28, -38, -7, -20, -17, -19, 14, -2, -4, -46, -9, 25, -9, -24, -51, 10, -22, -9, 36, -30, 16, -24, 18, -12, -22, -4, -36, 7, -39, -36, 5, -27, -16, -21, -8, 14, -30, -30, -16, -44, -20, 2, 37, 13, -20, -11, -38, 3, 33, -4, -9, -14, -24, -21, 20, 19, -15, 14, -29, 1, -11, 34, 16, -9, -12, 12, -30, -32, 27, -22, -48, 19, -55, -15, 31, -34, -48, 31, 25, 13, -34, -23, -31, -29, -14, -44, -26, 10, -39, 50, 34, -4, 34, -19, -35, -40, 30, -34, 17, 3, -28, -9, 9, -25, -13, -52, 49, -42, 42, 41, -23, 32, 27, 14, -11, 34, -25, 17, -20, 12, -11, -32, -29, -15, 39, -9, 20, 20, -1, 25, -62, -2, -7, -6, -10, 2, 0, -38, 14, 24, 12, -13, -9, 14, 5, -25, -14, -19, -25, 25, -18, 22, 21, -4, 15, -14, -25, 16, 2, -26, -4, -15, 20, -31, 46, -8, 38, -15, 33, 38, -28, 28, 12, 24, 5, -21, 33, 5, -29, -23, -17, 13, -3, 8, 6, -19, 19, -19, -23, 54, 35, 1, -22, 3, -15, -17, 30, 14, -3, 38, -9, 15, -8, -4, 24, 36, -39, -17, 35, -37, 10, -9, -20, 25, -29, 18, -25, 16, -27, 20, -44, -16, 22, 24, -7, -10, 25, -33, 19, 10, 22, 24, 46, -30, 22, 32, -14, 16, -26, 29, -8, -18, 19, 30, -30, 25, -9, 16, -38, -42, 39, -27, -27, -36, 41, -46, 20, -1, 47, 17, 39, 22, 28, -55, 14, -57, -7, 10, 2, 18, 4, -54, 17, 42, 3, 13, -29, -4, -6, 1, 7, 8, -29, -8, 6, -53, -12, 11, 4, -44, 33, -22, -30, 26, 33, -1, 31, -9, 9, -39, -28, -8, 23, -45, -36, 19, -45, 12, -41, 10, -18, -5, -45, -1, 3, -30, 22, 25, 21, 7, 14, -14, 35, 18, -35, 18, -33, -18, -22, 29, -3, -34, -9, -6, 32, 2, 6, -3, 8, 35, 24, -50, 36, -18, 17, -30, 35, -3, 37, -19, -23, -9, 23, 28, -14, 2, -55, 40, 12, 32, -11, 41, -18, 10, 37, -12, 5, -28, -20, 16, -62, -6, -11, -31, 5, 9, 3, 1, -9, -26, 9, 43, -20, -7, 21, 1, 9, -59, -13, 17, -11, 35, 3, -21, -18, 15, 12, 13, 6, -36, -7, -13, -45, -23, 15, -56, -37, 14, 11, 19, 57, -55, -30, -35, -41, 20, -22, 18, -25, -54, 22, -14, 10, 0, 26, 53, -50, 8, 64, -22, -31, 48, -34, 9, -22, 4, -13, 1, -11, -2, 6, 9, 35, -5, 47, -54, -17, -33, 26, -6, -31, 10, 30, -60, -34, -31, -32, 42, -33, -22, -6, -61, -58, 50, -15, -6, -57, -65, -46, -14, -11, 1, 41, 14, 16, -31, -33, -67, -4, -5, -18, 9, 21, -20, 4, -6, -11, 39, 7, -46, 3, -6, 4, -23, 40, -11, -24, -26, 30, 6, 30, -34, 28, -52, 8, 4, -3, 5, -6, 22, -12, 30, 9, 25, -38, -5, -1, -58, -45, 24, -63, 57, -23, -11, -33, -6, -15, 26, -71, 4, -18, -15, -54, -29, -67, -7, -48, 13, -23, -7, -24, 2, 62, 21, -23, -5, -15, 4, -16, -56, -9, -48, -53, -7, -26, 5, 38, -19, 5, -44, 21, -35, -19, -6, 9, 20, 16, 26, 46, 8, 22, -4, -49, 29, 26, 44, -9, 34, -9, 7, -49, -46, -30, 3, -33, -36, 6, 17, 1, 26, -37, -33, 6, -34, 14, -27, -17, -32, -31, -5, -44, 37, -7, -3, 5, -38, 17, -4, 35, 26, -11, -42, 5, -7, 10, -4, -55, 3, 8, -5, -11, -20, 43, -43, -58, -25, -1, 0, 27, -46, 8, 10, 8, 7, 19, 15, -11, 8, -8, -6, 57, 47, -2, 28, 29, -8, -14, 0, 8, 31, 42, -31, 37, 30, 2, -20, -67, 35, -11, 14, -7, 32, -16, -10, -15, 49, 28, -35, -30, -11, 27, 9, -34, 29, -5, -29, -9, -7, 21, -29, -45, 15, -7, -40, -48, 1, -22, -3, -17, 12, -26, -15, 5, 33, -1, 15, -21, -21, -6, 9, 25, 18, 10, -21, 29, 19, 2, -50, 1, 25, 10, 12, -53, -1, 26, 9, 15, -46, 21, 55, 7, -21, -24, 18, -37, -26, -40, -56, 15, 2, -11, -13, -3, -5, 9, 5, 7, -32, -19, -54, -16, 5, 28, -19, -18, 0, -33, 10, -15, 8, 26, -22, 28, 28, 0, -7, 19, 17, 20, 43, -33, -11, 33, -3, -11, -36, 43, -40, -18, 33, -37, 0, -3, 41, -28, 36, 13, 0, -13, -7, -27, -44, -7, -23, 12, 12, -12, 16, 48, -8, -22, -34, 12, -39, -26, -25, 6, -10, 0, 17, -16, 7, -20, 40, 7, 41, 12, 46, 11, -15, 35, 36, 5, 9, 10, 5, -24, -24, -2, -4, 7, -12, 7, -1, -3, 27, -56, 17, 24, -2, 27, 7, -7, 40, -23, -3, 4, -17, -56, -38, 36, -43, -10, -16, 14, 12, 9, -21, -17, 5, -15, -13, -28, -2, -26, -4, -11, 11, -48, -7, 12, 52, 4, -55, 21, 17, 1, 3, -10, 35, 42, -47, -38, 2, -39, -53, -25, 28, -26, -15, 16, -23, 0, -17, 1, 15, 31, -20, 46, 44, 19, -17, -18, -9, 3, -14, -35, 26, -16, 29, 16, -11, -16, 20, 1, -4, -26, 9, -50, -29, 40, -38, -3, 8, -34, -49, -3, 29, 3, -37, -5, 50, -9, 1, 6, -12, -5, -20, -23, -35, -25, 0, 32, 10, 45, 21, 4, 19, 29, -14, 45, 2, -12, -21, 8, -12, -20, 3, 10, 15, -43, -18, -8, 10, 34, -23, 47, -16, -4, -10, 0, 23, 27, 1, 0, -34, 33, -31, 6, -22, 25, 8, -23, -30, -16, -4, 7, -63, 0, -34, -2, 3, -5, -27, 17, -3, -12, -25, -13, 16, -38, -18, -46, 6, 31, -19, 41, 30, -19, 13, 21, -11, 17, -14, -5, -12, 40, -29, -11, 37, -3, 5, -23, -7, -16, 32, -18, 28, -5, -25, -22, 6, -41, 19, -9, 1, 4, 20, -30, -18, -10, -43, 16, -33, -10, -6, 39, -2, 9, 36, -11, 4, 2, 41, 20, 8, -36, -26, -8, -15, 37, -2, -44, 44, 46, 12, 6, -22, -49, 29, 8, -4, -23, 10, -21, 25, -17, -22, -18, -12, 6, 24, -12, 27, -43, 11, 14, -27, 1, 11, -7, -6, 8, 12, -20, 27, -54, 36, -16, 14, 42, -18, 26, 34, -10, 43, 37, 7, 40, -50, 22, 11, -31, -13, -26, -37, -36, 25, -58, 6, 19, 16, -20, -31, -58, 26, -28, -24, -37, -6, -4, -28, -36, -3, -41, 5, 2, 15, -24, 18, -40, 4, -5, -6, -2, -3, -61, 31, 26, 44, -14, -13, -18, -24, 14, -11, -4, -29, -30, -11, -18, 15, 21, -26, -5, -6, 2, 19, 46, -6, -20, -38, -23, 40, 11, -4, -46, -24, -19, 21, 32, -33, -6, 13, -51, -26, -5, 17, -31, -8, -11, 11, -44, 28, -5, -1, 28, 37, 9, 22, -3, -21, -44, 26, -1, 36, -46, 3, 0, -22, 17, -3, 26, -20, 9, 5, 23, -25, 42, 13, -18, 9, -15, -55, 26, -20, 38, -37, -54, -30, 9, 16, -8, 5, -31, -4, -22, 14, 21, 10, -3, -35, 24, 43, -15, -9, 20, 19, -11, -13, -21, -29, -29, -28, -41, 40, 1, -23, 43, -41, -6, -16, 18, 28, -15, 15, -30, 9, 11, 32, -43, 30, 32, -16, 44, 23, 15, -31, -12, -49, -4, 17, 5, -32, 9, 8, 20, 33, 15, -44, -27, -12, 21, -30, -20, 11, 0, -33, 26, 13, -31, 3, -55, 19, -17, 19, -1, -44, -10, 21, -50, -16, -42, -2, -2, -35, 11, 21, 22, 16, -24, 13, -6, 26, 35, 47, -9, -9, 13, -2, 9, -32, 12, -22, 7, 23, -24, -33, 29, -5, 1, -12, 20, 12, 22, -35, -11, -15, -10, -51, 14, 38, -14, -45, -32, -21, -6, -25, -22, 22, -58, 15, 28, -32, 27, -22, 0, -14, -38, -22, 19, -29, 32, 38, 2, 21, -42, 45, -21, -30, 16, -12, -17, -27, -18, -5, 22, 7, 0, 48, 25, -10, -78, -29, 60, -6, 7, -20, -8, -4, 12, -30, -36, -4, 2, 0, 35, 19, -12, -26, 32, 2, 14, 35, 5, -46, -32, -35, 41, 34, 45, 2, -17, 11, -36, 1, -21, -5, 35, 31, -40, 0, 39, -27, 23, 20, -45, 25, -15, -7, -39, -26, -5, -19, -9, -13, -4, -10, 8, 3, -30, -40, 3, 4, -49, -34, -14, 6, 14, -40, -3, -30, -31, -37, -2, -33, -20, -62, -21, -32, 7, 25, -32, -44, -2, 11, -13, -7, -36, 7, 33, -24, -23, -21, -32, 59, -3, 31, 6, -30, 12, -7, 0, 4, -5, 32, -34, 8, 31, -60, -12, -12, -27, 29, -57, 18, -25, 15, -9, -23, 14, 1, -32, 25, 18, -11, 27, 24, 49, 66, -7, 14, 4, 8, -4, 52, 33, 42, 20, 14, 41, -1, 49, 4, 46, 33, 45, -3, -44, -6, -3, -20, 21, -28, 13, 29, 15, -2, -21, 30, -3, 22, -62, 0, 6, -8, -4, -5, -44, -11, -48, -1, 11, -24, -8, -29, -5, -2, 47, -46, -16, -30, 28, -45, 25, -11, -70, 3, -46, 15, -42, 18, -41, 26, -22, -49, -13, 17, -40, -52, -48, -2, 57, 2, -38, 4, 11, -59, 24, -26, -10, -43, 37, -9, -33, -31, -40, 54, -1, 3, -37, 11, 4, 39, -4, 19, -12, 4, -40, -13, -34, -63, 56, -31, 17, 44, -16, -5, 13, -68, -40, -38, 43, -60, -42, -50, -56, -15, 6, -1, -52, 18, -18, 42, -36, -27, -16, 6, -34, -44, -20, -22, 47, 7, 27, -17, 25, -56, -40, 41, -17, 41, -12, -43, 32, -26, -8, -1, -21, 17, -41, 49, -26, 8, -15, 37, -35, 59, -46, 40, 26, -27, 40, -14, 32, -54, 18, 3, 46, -35, -15, -28, -23, 6, -19, 44, -27, 13, 3, 53, 15, -22, 19, 14, -10, -21, 47, 39, -24, -48, -19, -17, 0, -21, -4, -28, 41, -30, -10, -23, 34, 19, 50, -10, -21, -37, 1, 16, -33, 67, -30, -14, 7, -23, -9, -4, -31, -17, -33, -10, 3, -18, 60, -41, 16, -26, 30, 15, 24, -43, -2, -18, -26, -6, 22, -29, 2}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_BIAS_0 {63, 32, -5, -40, 5, -64, -15, -90, -67, -28, -34, -71, 127}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {10}

#define DENSE_BIAS_LSHIFT {1}

#define DENSE_OUTPUT_RSHIFT {9}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 4
#define INPUT_1_OUTPUT_OFFSET 0
#define CONV1D_OUTPUT_DEC 4
#define CONV1D_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_OUTPUT_DEC 4
#define LEAKY_RE_LU_OUTPUT_OFFSET 0
#define CONV1D_1_OUTPUT_DEC 3
#define CONV1D_1_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_1_OUTPUT_DEC 3
#define LEAKY_RE_LU_1_OUTPUT_OFFSET 0
#define FLATTEN_OUTPUT_DEC 3
#define FLATTEN_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 2
#define DENSE_OUTPUT_OFFSET 0
#define DROPOUT_OUTPUT_DEC 2
#define DROPOUT_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[450] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {150, 3};
const nnom_qformat_param_t tensor_input_1_dec[] = {4};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_conv1d_kernel_0_data[] = TENSOR_CONV1D_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_kernel_0_dim[] = {3, 3, 30};
const nnom_qformat_param_t tensor_conv1d_kernel_0_dec[] = TENSOR_CONV1D_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_kernel_0 = {
    .p_data = (void*)tensor_conv1d_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_bias_0_data[] = TENSOR_CONV1D_BIAS_0;

const nnom_shape_data_t tensor_conv1d_bias_0_dim[] = {30};
const nnom_qformat_param_t tensor_conv1d_bias_0_dec[] = TENSOR_CONV1D_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_bias_0 = {
    .p_data = (void*)tensor_conv1d_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_output_shift[] = CONV1D_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_bias_shift[] = CONV1D_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_config = {
    .super = {.name = "conv1d"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_bias_shift, 
    .filter_size = 30,
    .kernel_size = {3},
    .stride_size = {3},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv1d_1_kernel_0_data[] = TENSOR_CONV1D_1_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_1_kernel_0_dim[] = {3, 30, 15};
const nnom_qformat_param_t tensor_conv1d_1_kernel_0_dec[] = TENSOR_CONV1D_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_1_kernel_0 = {
    .p_data = (void*)tensor_conv1d_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_1_bias_0_data[] = TENSOR_CONV1D_1_BIAS_0;

const nnom_shape_data_t tensor_conv1d_1_bias_0_dim[] = {15};
const nnom_qformat_param_t tensor_conv1d_1_bias_0_dec[] = TENSOR_CONV1D_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_1_bias_0 = {
    .p_data = (void*)tensor_conv1d_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_1_output_shift[] = CONV1D_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_1_bias_shift[] = CONV1D_1_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_1_config = {
    .super = {.name = "conv1d_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_1_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_1_bias_shift, 
    .filter_size = 15,
    .kernel_size = {3},
    .stride_size = {3},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_VALID
};

const nnom_flatten_config_t flatten_config = {
    .super = {.name = "flatten"}
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {240, 13};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {13};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[13] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {13};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[9];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(conv2d_s(&conv1d_config), layer[0]);
	layer[2] = model.active(act_leaky_relu(0.300000f), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv1d_1_config), layer[2]);
	layer[4] = model.active(act_leaky_relu(0.300000f), layer[3]);
	layer[5] = model.hook(flatten_s(&flatten_config), layer[4]);
	layer[6] = model.hook(dense_s(&dense_config), layer[5]);
	layer[7] = model.hook(softmax_s(&softmax_config), layer[6]);
	layer[8] = model.hook(output_s(&output0_config), layer[7]);
	model_compile(&model, layer[0], layer[8]);
	return &model;
}

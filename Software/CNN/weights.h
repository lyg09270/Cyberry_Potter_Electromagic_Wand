#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV1D_KERNEL_0 {-83, -61, -88, -83, -61, -84, 35, 61, 27, 10, -13, 36, -13, 23, -96, 45, 4, -9, -42, -89, -62, -97, -78, -88, -32, -51, -63, -62, -34, 12, -12, -78, -44, -49, 69, -27, 72, -16, 3, 16, 76, -65, 20, -101, -40, -67, 62, -44, -24, 3, -20, -103, -47, -47, -50, -7, 14, 71, -62, 79, 0, -33, 52, -35, 73, -7, -46, 70, 22, 71, 32, 73, -10, 66, -4, 102, -18, 40, 12, 36, -97, -58, -93, -19, -6, 7, -44, 56, 56, 95, -36, 62, -88, 16, -35, -51, 44, -20, -9, -4, 101, -41, -31, -39, -16, 37, -31, 67, -40, -21, -36, 36, -14, 36, 71, -49, 55, 9, 23, -43, 24, 16, 54, -2, 52, -19, 23, 24, 45, 89, -21, 28, -81, 5, -45, -8, -53, 36, 72, -24, -29, -5, -9, 42, -86, 71, -76, -43, -25, 72, 46, 4, 29, 72, -41, 54, 43, -100, -21, -79, 71, -80, 22, -31, -1, 31, 66, 92, 104, 81, -1, 27, 77, 82, -41, 61, -48, 33, -63, 19}

#define TENSOR_CONV1D_KERNEL_0_DEC_BITS {8}

#define TENSOR_CONV1D_BIAS_0 {-118, 0, 111, -112, -73, 77, 16, -45, 108, -23, -67, -44, 101, -68, 33, 19, 11, -19, -29, 77, 46, -6, -57, 121, -9, 50, -62, 6, -40, 37}

#define TENSOR_CONV1D_BIAS_0_DEC_BITS {9}

#define CONV1D_BIAS_LSHIFT {3}

#define CONV1D_OUTPUT_RSHIFT {9}

#define TENSOR_CONV1D_1_KERNEL_0 {-12, -27, 24, -73, -50, -3, -31, 11, 7, -46, -62, -27, 14, -15, -4, 50, -54, 10, -20, -2, -31, -59, 2, 50, 34, 32, -65, -34, 12, 35, -72, -65, 51, -33, 2, 56, 62, 10, 66, -47, -26, -35, -25, -52, -47, -36, 29, -51, 28, 49, 2, -59, -34, 7, -45, -58, -29, -37, -53, 37, -55, 0, 43, -59, -56, 22, 64, 15, 22, -17, 60, -35, -4, -70, -27, -24, 72, 32, 9, 41, -22, -35, -51, 14, -27, -12, 29, -35, -39, -25, 9, 41, -60, 6, 31, -43, 41, -53, -61, 10, -9, 45, -43, -67, -20, -52, 72, 42, -23, 19, -13, 6, -48, 25, 6, 26, -27, 36, 63, -23, 32, 46, -5, -28, -35, -57, 68, 14, -74, 51, 55, 53, 26, -37, 42, -37, 15, 40, 25, 56, 29, 41, -33, 16, 0, -49, 46, 68, -35, 50, -36, 43, -6, -57, 2, -45, -15, 15, -46, 59, -10, 24, -17, 9, -45, -55, 46, 28, 17, -30, 5, -42, 20, 31, -3, 37, 24, 65, 33, 49, -24, 14, -25, 8, 6, 29, 43, 77, 40, 9, -10, -44, 19, 13, -33, 36, 45, 44, -33, 16, 13, -39, -24, 29, -10, -73, 13, -102, -95, 9, -63, -72, 10, -52, -70, 21, 55, 55, -16, -11, 29, 19, -10, -19, 36, -44, 40, 22, -22, -33, -19, -15, 29, -30, -5, -37, 57, -14, -47, 40, -30, -32, 28, -4, -43, 38, 35, 19, -75, 45, 60, 33, -30, -57, 46, -39, 50, -5, -21, 13, 35, -61, 29, 22, -15, -4, -29, 25, -69, -26, 5, -16, 24, 22, -26, 5, 21, -8, 56, 23, 37, 26, -23, 68, -25, 68, 48, -14, 55, 9, -13, -60, 9, -43, -19, 17, -61, 23, -35, 25, 48, 9, 2, 42, 7, -55, 37, 18, 4, 52, 14, 9, -45, 27, -31, -15, 43, 4, 39, -47, -13, -30, 61, -38, 8, -22, -31, -47, -26, 68, 44, 31, 41, 49, 46, -23, 51, -1, 42, 1, -35, -36, 34, 19, -21, 27, -29, 18, -1, 46, 7, 15, 15, -36, 59, -11, -46, -55, 12, 7, -60, -22, 47, -59, 10, 19, 8, -46, -47, -14, -14, -41, 4, -74, 15, 3, 42, 4, -11, 36, 34, -41, 11, 21, -58, 64, -30, 43, 37, -33, 0, 17, 39, -67, -47, 21, 49, -51, 38, -1, -3, 10, 45, -5, 73, -57, 39, -24, -31, 13, 40, 13, -71, 49, -32, 40, 36, 12, -32, 17, 0, 32, 9, -33, -29, -59, 12, -6, 21, 53, 32, 44, 61, 27, 80, -20, -2, 33, -11, 40, 9, 20, 13, 69, -8, 33, -70, 67, -2, 68, 59, -38, -62, -42, -3, -21, -1, 51, -13, 44, 36, -44, 4, 41, 20, 17, 67, -84, -14, -30, 77, 62, -30, 30, -49, -11, 27, 38, 44, -4, -35, 51, -46, 5, -54, 53, -34, 1, -54, 11, -16, 46, -26, -11, -21, -75, -33, -25, -39, -33, 6, 6, -32, 63, -6, 54, 70, 84, 65, -29, -42, 32, -81, 35, 28, 29, 5, 36, -43, -43, 17, 49, 39, -33, 67, 20, 54, -73, -15, 12, 57, -26, 12, 8, -22, -30, 13, 63, 20, -24, 15, 23, 31, 20, 5, 36, 12, 32, -38, 17, 15, -37, -6, -35, -12, 33, 47, -25, 22, 96, 39, 51, 32, 27, 72, 64, -30, 30, 30, 52, -25, 30, -13, -1, -14, 28, 32, 49, 39, -26, -22, -40, 20, -43, -57, 45, 39, 25, 25, 62, 58, -6, -7, 50, 58, -40, 39, 8, -22, 73, -40, 52, 33, -6, -24, -5, 58, 26, 45, 32, 65, -46, -50, 40, 37, 50, 32, -55, 40, 79, 34, -44, -56, 66, 13, 22, 75, -17, -13, 23, 68, -40, -32, -6, 68, 9, 27, 57, 27, -12, 30, 13, -91, -10, -43, 32, 55, -54, -52, 38, 52, -58, 47, -57, -62, -58, 75, 45, -27, 7, 54, -35, -71, 49, -14, -2, 0, 80, 51, -83, 57, -43, -61, -5, -2, 24, 46, -33, 29, 48, 5, -70, 1, -23, -54, -79, 55, 48, 36, -12, 54, 27, -52, 76, -21, 26, 62, 55, 12, -13, 23, -65, -76, 38, -47, 44, 82, -6, 26, 21, 0, -45, -14, -61, -19, 8, 59, 62, 65, 24, -24, 12, -64, -64, 26, -59, 30, -8, -53, 5, -31, 56, 52, -52, -29, -23, 8, 17, -28, -17, -3, 22, 2, 37, -44, -9, 2, -20, 62, 7, -67, 43, -18, -51, -53, -55, 37, -46, 20, 12, 42, 53, 34, 3, 15, -50, -32, -27, -12, -7, -1, 32, -35, -37, -65, -16, -68, -35, 33, -53, -38, -34, -57, -16, -27, 13, 42, -60, -1, 47, -16, -38, -13, -49, 36, 30, -6, -78, -27, 28, -32, 2, -66, -15, -3, -6, -66, 15, 34, -62, 0, 46, -28, -31, 17, -67, -62, -44, -59, 28, 29, 2, 33, 29, 2, -1, 11, 39, 70, -34, -65, 54, -40, -56, -22, 37, -37, 18, -21, 69, 38, 65, 2, 31, 40, -24, -10, -62, -68, 24, -8, 55, 14, -34, 46, 53, -43, 19, -1, -74, -11, 13, 8, -51, 4, 53, 31, 53, 43, 38, -47, -39, -3, 0, -21, 20, -71, -49, -46, 36, 4, 50, 44, 16, 57, -27, -23, 20, 12, -58, -6, -15, 39, -6, 30, 18, 4, -43, -43, 66, -38, -16, 56, -39, 22, 20, -2, -47, -54, 80, -55, 55, -7, 58, 47, 66, -44, 34, -20, -62, 43, -32, 81, 52, 62, -34, -87, 3, -58, 60, -17, -50, 34, -56, -12, 20, -60, 12, 13, 39, 21, -23, 63, 5, -4, 34, -56, 64, 3, 34, 22, -40, 52, 53, 78, -24, -67, -75, -80, 50, -29, -33, 70, 25, 11, 15, -40, 50, -32, 44, 3, -58, 8, 28, -34, 74, -35, -43, 3, -46, -65, -72, -23, -16, 41, 24, 51, -45, -11, 75, -12, -20, -14, 10, -16, 3, 49, -5, 46, -17, 2, 57, 36, 45, 59, -2, 56, 3, 37, -12, 26, 34, -37, -7, -2, 26, 47, 35, -10, -41, -48, 24, -35, 21, -22, -43, 23, -14, -24, 2, -12, 23, 0, -51, 68, -6, 69, 41, 40, -17, 50, -11, -15, -12, 12, 56, 32, 20, 57, -40, 32, 26, -40, 16, -37, 9, 78, -24, -40, 22, 29, 16, 35, -35, 13, -59, 59, -36, 21, -11, -1, 24, 27, 22, 5, -19, -12, -32, 6, -11, 48, -82, -12, 68, 61, 4, 20, -20, 74, -43, 13, -39, -96, 53, -57, 22, 17, 37, 25, -20, -27, -80, 11, 18, 37, -93, -66, -66, -60, -35, -10, -63, 47, -38, 15, -46, -55, -34, 59, -7, 7, -23, -41, -10, -45, 41, 22, 59, -5, -62, 0, -18, 0, -41, -4, -27, -97, 15, -43, -1, 23, 4, -9, -22, -43, -44, -61, -112, -20, 19, -81, -18, 51, 44, 0, 12, -13, 18, -32, -64, 57, 51, 62, 2, 35, -37, -66, 28, 65, -23, 17, 1, 32, 49, -13, -27, 66, 28, 22, 15, 29, -34, 53, 2, -24, 51, 70, -33, -47, 22, 34, 18, -50, 0, -29, 3, 42, -41, -40, 7, -55, -36, 70, -70, 26, -3, 28, 69, 51, -22, 1, 22, -3, -64, 69, -47, 54, -40, -28, 55, 15, 29, 33, -28, -7, -30, 56, 14, -20, 48, -48, -1, 36, -64, -30, 30, 7, 26, 17, -7, 32, 26, 42, -10, 2, -21, 3, -42, 38, 48, 58, -3, -39, -26, -33, -22, 49, 8, 38, -52, -16, -19, 38, -4, 3, 12, -56, -80, 76, 30, -6, 46, 31, -17, 43, -17, -25, 6, 49, -26, -74, 22, -19, -37, 30, 16, -71, 31, -34, 4, 20, 52, 84, -14, -37, 63, -85, -27, 67, 50, -70, 9, 72, 22, -8, 30, -23, -1, 27, -60, 15, 9, 7, 53, -23, 60, -40, 52, -25, 61, -56, -33, -19, -20, 35, 22, -16, -22, -21, 22, -30, 55, 46, -18, 27, 47, -25, 40, -32, 4, -48, 44, 37, -11, 23, -36, -47, 16, -4, -20}

#define TENSOR_CONV1D_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_CONV1D_1_BIAS_0 {103, -49, -8, -2, 87, 5, 60, -65, 6, -44, 28, 21, 36, 61, 78}

#define TENSOR_CONV1D_1_BIAS_0_DEC_BITS {9}

#define CONV1D_1_BIAS_LSHIFT {2}

#define CONV1D_1_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_KERNEL_0 {-10, 44, 13, -38, 21, -47, -11, 1, -59, -11, 9, -67, -6, 9, -26, -4, 17, -21, 22, -7, -16, -16, 15, -67, 22, -25, -33, -38, -66, -37, 10, 33, 16, -7, 14, 2, -11, -19, 14, -55, -72, -29, -33, 10, -69, -2, -45, -29, 3, -36, -26, 9, 24, 1, -28, -3, -24, -10, 20, 21, 6, -68, -41, -72, -46, -31, 27, -46, -13, 54, -50, -32, 44, 35, 7, 17, 29, -72, 43, -9, -33, 36, -53, -54, -14, 26, -9, -30, 44, -30, -1, 23, -30, -39, 19, 34, -36, -38, 0, -38, -12, 12, 28, -11, 57, -50, 66, 66, 13, -15, -33, 21, -19, 17, 10, 21, -6, -54, -23, -13, -2, -18, -42, 20, 46, 12, -19, -2, 51, -6, 10, 24, 26, -2, 2, 18, 5, -34, -25, -1, -11, -33, -6, 12, -14, -26, -13, 54, 4, -37, 11, 7, -1, -24, 17, 10, -34, -9, -22, -28, 15, 5, 20, -8, -59, -39, 13, 14, -18, -3, 12, 3, -38, 15, 45, -38, 3, 24, -14, 25, -15, -38, 39, -18, 31, 34, 31, -30, -8, -2, 27, 17, -5, -29, -62, -13, -59, -54, -9, 26, 22, 17, -18, -46, -27, 17, -38, -31, -46, 2, 43, -17, 1, 8, -33, -37, -63, 33, -12, -16, 5, 16, -5, 2, -28, -3, -29, 45, 37, -4, -2, 14, 22, -26, 17, 10, -41, 9, -36, -12, 32, 6, 24, 15, -24, 25, 14, -7, 19, -21, 34, -51, -1, 24, 23, 19, 27, 14, 0, -38, 42, 31, -8, -19, -50, -18, -13, -21, 34, -8, -61, -66, 15, 19, 60, 6, 13, 23, -18, -23, -3, 1, -1, 34, -14, -10, 8, -30, -12, 15, 24, -2, 55, 25, 6, -41, 13, 35, -16, 4, 10, -7, -20, -14, 36, 37, -14, -12, 10, 22, -6, 6, -1, -47, -26, 9, 27, -17, 19, 31, -21, 8, -46, -38, 3, -30, -51, -30, 5, -20, -23, 39, -14, -49, -14, -21, 11, -20, -32, -19, -8, -39, 2, 16, -24, 13, 24, 43, -37, 20, -11, -16, -29, 4, 7, -41, 7, -39, -14, -7, -36, 4, -5, 46, 0, 21, 26, -15, 12, 4, -15, 20, 2, -26, -10, 35, 28, 8, 31, 27, 10, -23, 14, 18, -10, 13, 22, 6, -5, 21, 20, 11, -31, -23, 16, 17, -46, -16, -16, -13, 32, 10, 39, 20, -12, -16, 29, 30, 32, 15, -36, -5, 4, -13, -9, -14, -1, -6, -14, 6, -1, 11, 17, 22, -31, 17, 21, -29, 3, 44, 13, 12, -41, 21, 11, 41, -2, 12, -13, -8, -38, 8, -19, -39, 33, 5, -8, 22, -53, -66, 40, 26, -90, -25, -36, -22, -6, 3, -3, 3, 62, 7, -36, -20, 9, -16, -33, 1, -6, 17, -4, -11, 32, 1, 25, 25, 28, 25, 3, 11, 61, 10, 25, 6, 44, 13, 35, 45, 28, 39, -12, 34, 8, -4, -11, -2, 10, 23, -20, -31, 2, -21, 10, 21, -14, -17, -58, -39, -18, 38, -64, -26, -24, 21, -22, 36, 27, -2, -38, -11, 31, -5, 4, -17, -23, 19, 23, -22, 2, 11, -4, -5, 43, -4, -10, -4, -10, 1, 21, -6, 26, -3, -23, 36, -2, -6, -44, -38, -3, -29, 11, 14, 46, 2, -27, -42, 11, 15, 17, -5, -25, -6, -25, -59, 23, -16, 10, 1, -7, -42, 14, 9, 13, 34, 33, 2, -37, -21, -19, -46, 12, -41, 18, -15, -6, 26, -17, 20, 9, 34, 2, -7, 11, -24, 29, 36, -4, 17, -16, 21, 33, -4, -19, 13, -5, 10, -12, -29, 28, -30, -20, -22, 33, 8, 9, -34, 1, -42, -18, -42, -3, -11, 49, 20, -37, -6, 8, -44, 26, -21, 20, -38, -34, -32, 41, -36, -51, 14, -53, 17, 4, 36, -27, 1, -11, -14, 49, 2, 44, -39, -37, -1, 23, -7, 38, -12, 13, -26, 2, -25, -2, -2, 28, 9, 35, 60, 12, 6, 29, -13, -34, 51, -63, -9, 3, -69, 4, -5, -20, -9, 4, -22, -52, -57, -27, -8, -2, 32, -32, -54, 5, -6, -48, -3, -1, -30, -22, 3, -9, -10, 51, -54, -41, 13, -27, -50, -8, -68, 5, -29, 21, 45, -38, 50, 34, -6, -11, 16, -9, -60, 61, 26, 63, -12, -4, -20, -65, 27, -49, 3, 13, -24, -26, -51, 7, -11, 15, -23, 30, -25, 47, -69, 1, 59, 16, -40, -17, -21, 7, 11, -32, 6, 37, 2, -41, -8, -1, -23, 0, 47, -19, 2, 11, -27, -23, 47, 13, -1, -11, 56, -7, 7, 49, -19, -51, -14, 8, -15, -19, 27, 22, 6, 49, -13, -32, -49, -12, -2, 14, -2, -31, -28, -10, -43, -22, -30, 23, 65, 24, -20, -44, -42, -20, -60, 14, 34, -38, -15, -21, 12, -16, 13, -24, -6, -18, -25, 16, -33, 10, -59, -54, -19, -8, 6, 11, -4, -10, 55, 2, 15, 30, -14, 6, 0, -7, 7, 16, -4, 13, 4, -30, -37, -9, 5, -39, -19, -18, -26, -9, -4, -22, -47, -18, 53, 9, -41, -6, 39, 17, -41, -40, -14, 27, 26, 11, -8, 25, -40, -41, 35, 15, -41, -21, -5, 17, 4, -16, -23, -37, -3, -21, -3, -36, 20, 5, -6, 34, -2, 11, 1, 20, -62, -12, -44, 30, 30, 0, -12, -33, -10, -58, 4, -40, -75, 17, 21, -23, -24, 11, -16, -46, 25, -2, 20, -38, -18, 47, -8, -10, -23, 19, -30, 18, -22, 19, -68, -18, 30, -18, -6, -7, -51, -39, 15, -30, -32, 30, 21, 3, -5, 5, 6, -10, 26, 21, -50, -23, -17, 35, -70, 37, 6, -18, 10, -7, -42, -20, -34, -54, -47, 28, 54, -14, -37, -2, 27, -88, 29, 24, -71, 8, 51, 21, -92, 15, -39, 41, -26, 40, -47, 54, -60, 16, 20, 32, -9, 22, -28, -3, -21, 4, 34, -15, -32, -48, -12, 20, -84, -13, -16, -23, -37, -22, -44, -36, -49, -11, -27, -51, 64, -6, 3, 31, -35, -19, -24, -23, -21, -3, -57, 64, -48, 20, -20, -35, 12, -72, 9, 40, -7, -21, -49, 29, -5, -3, -15, 13, -20, 16, -8, 1, -30, -64, -72, -24, 20, 12, 39, -6, 39, -3, -12, -6, 0, -17, -60, -19, 17, -43, -49, -16, -5, 33, -24, 21, -26, 1, 34, -29, -18, 33, -59, -49, -25, 45, -19, 1, 7, 23, -50, 6, -6, 10, -8, 42, -9, -24, 20, 29, -12, -14, -84, -23, -14, 45, -54, 8, 20, -14, -22, 33, -35, -19, 23, -14, 44, 8, -9, -59, 15, -19, 1, -4, -57, 7, 41, 62, -39, -17, -45, 27, 55, 22, 32, -24, -47, -31, -17, 8, -37, 13, -22, 13, 2, 50, -55, -29, -12, 4, 32, -7, -51, 1, -34, 35, 39, -5, 49, 34, -5, -1, -19, -25, 54, -1, -21, -13, -11, -14, -46, -44, -58, 7, -1, -2, -4, 49, -15, -2, -51, -12, -13, -15, 42, 22, -8, -5, -11, 4, 0, -8, -4, -32, -41, 35, 18, -39, -32, 34, -25, 6, -7, 51, -12, -11, -5, 4, -41, -15, 16, 17, 16, 44, 8, 11, 4, 15, -52, -20, 22, 22, 45, -18, 32, 36, 23, -52, -6, -33, -12, 43, -49, -22, -7, -20, -23, 16, 2, 1, 2, 4, -3, -2, -24, 5, 35, -9, -29, -52, 0, 10, -18, 27, 32, 35, -30, -31, -17, 2, 8, -36, 42, -2, -28, 3, -33, -30, -19, 36, -21, 2, 3, -31, 2, -35, 31, -46, -2, -16, -25, -60, 4, 30, -8, -55, -33, 10, -47, -70, 12, -10, -29, 9, 12, 32, 21, -4, 28, -22, -22, -9, -5, -13, -12, -67, -17, 11, -8, 34, 23, 25, 35, -11, -42, 13, 27, -37, -7, -20, 9, 2, 22, -64, -40, -6, 5, -36, -45, -24, -31, -26, 20, 13, 14, 40, -38, -39, -4, -23, 44, -4, 7, -60, 2, 27, -44, 11, 50, 19, 53, -18, -29, 5, 3, -22, -6, -18, -4, -40, -29, 30, -39, -22, 22, -17, -14, 12, 19, 6, 19, 17, 40, 7, -12, -79, -25, -29, -13, -16, 27, 16, -66, -40, -21, -7, -30, 16, 1, -33, -41, -30, 28, -26, 14, 9, -1, -6, -7, -2, -30, 5, -12, 38, 45, 14, -8, -7, 41, 28, -8, -46, -1, -5, 34, -66, -17, 10, -11, 8, 19, -29, -16, 21, -13, 16, -49, -1, 15, 7, -2, -3, 4, -3, 10, -25, 20, 17, -23, 38, -24, -46, 11, -21, -16, -30, 10, -29, -51, 27, -1, 21, -23, 29, -3, 36, 54, -22, -9, -1, -66, 1, 25, 18, -27, 27, 23, -9, 1, -67, 17, 14, -27, -9, 17, -22, -14, -11, -7, -11, -7, 42, -9, -22, 4, 35, 13, 2, -13, -45, 20, 15, -17, -41, 11, 18, 6, 30, -24, -29, 7, -33, 23, 8, 56, -11, -34, -37, -56, 10, -19, 36, -4, -37, 2, 17, -37, -2, 8, 0, -18, -35, 8, -30, 11, 16, -22, 29, -42, -27, -8, 30, 7, -75, 32, -5, 29, -9, -22, -23, 7, -25, 0, -7, 20, -24, -11, -8, -19, 6, 14, -7, -46, -18, 5, 21, 40, -54, 0, -8, 5, -11, 0, 9, -50, 3, -40, -42, 5, 21, 80, -10, -31, -27, -61, 33, -38, -29, -18, -3, -5, 20, 16, -23, 23, 10, -31, -56, 24, 43, -17, -19, -22, -25, -27, 3, 15, 2, 12, -6, 34, -36, 34, 19, -15, -33, 38, 10, 17, 2, 8, 6, -21, -16, 18, -64, 5, 28, 2, -49, 18, -13, -42, -12, 40, -26, 57, 0, 0, -30, 5, -22, 1, 22, -19, 24, -29, -9, -10, 4, 22, 19, -3, -28, 19, -19, 4, 30, -3, -24, 3, -17, 20, -12, 30, -6, -3, -31, 25, 4, -69, -34, 12, 10, -32, 39, 4, 19, 12, 29, -57, 21, 10, -11, -5, -43, -16, 18, -31, 37, -50, 8, -7, 34, 22, -3, 10, -24, -24, -2, 16, -13, -9, 8, 32, -23, 38, 32, 43, -71, -10, -41, 25, -36, -35, -22, 30, 9, -20, 10, 38, 11, -10, 43, 4, -17, 20, -30, -47, 15, -1, 26, 29, -14, 36, 2, -1, 1, -32, 16, 51, -23, 17, -24, -47, -13, -7, -14, 20, 0, 7, 11, -15, -18, 8, 35, -36, -5, -33, 25, 20, 6, -16, -28, 66, 7, -20, -10, 0, 24, 22, -22, -4, 31, -9, 4, -23, 31, 17, 20, 27, 12, 4, -2, 25, 4, 26, 27, -33, 6, 44, -12, 3, 10, -26, 22, 14, 38, -22, -37, 8, -40, 22, 5, 27, 0, 9, -26, 8, 15, -15, -8, -6, 6, -29, -16, 25, -8, 43, 19, 19, -12, 27, -60, -35, 37, 14, 8, 8, 12, 42, 47, 10, -33, 64, -34, 32, -7, 5, -7, -27, 19, 26, -37, -6, 25, 27, -9, 24, -39, 15, 10, -19, -11, 12, -10, -9, 12, 33, 8, 22, 12, -43, -9, -9, -2, 30, 29, -62, 37, -17, 6, 32, 1, 34, 2, 40, -25, -17, -37, 9, 29, 31, -31, 7, 10, -35, 5, 33, 8, 77, 1, -40, -27, -2, 34, 6, -17, 2, -18, -35, 20, 16, -4, -17, -56, -1, 16, 7, 4, 3, 26, 49, -54, -8, -27, 13, 66, -39, -8, 16, -29, 47, -46, -22, 32, 1, 24, -18, 12, -28, 10, 25, -4, 18, -15, -30, -9, -3, 32, -7, -10, -38, -2, 24, 21, -10, -7, 31, -23, -38, 5, 13, 31, -29, -35, -10, 15, -29, -19, 34, -23, -10, -22, -12, 23, 20, -3, -53, -31, -9, -12, 44, 34, -26, 17, -7, 26, 12, -45, -27, -21, -14, -9, -69, -29, -17, 14, 29, -13, -7, -11, -15, 15, -48, -11, 48, 32, -57, 21, -73, 29, -40, -54, -25, -67, -64, -34, 17, -13, 4, -8, -57, -8, 29, 9, -68, 10, 46, 6, -40, -10, 41, 22, -49, -7, 50, -23, -34, 22, 52, 6, 15, -44, 8, 10, 10, 19, -3, -29, -21, -22, 67, -27, 28, -18, -37, -11, 10, 44, -30, 34, -15, -11, -50, -69, 33, 40, 42, 15, -88, 1, 8, -28, 24, -83, -23, -26, 16, 14, -36, -23, 15, 17, -18, 3, 27, -19, -12, 17, -12, -35, -29, 11, 24, 35, -27, 9, -51, 1, 16, 45, 16, 33, 17, -15, 30, 36, -39, 13, -52, -9, 48, 11, -24, 3, 2, -17, -38, 5, -2, -37, -11, -11, -22, 18, -51, 26, 27, -17, 18, -9, -33, -15, -61, -30, -7, 38, -3, -6, 23, 0, 12, -32, 27, -4, -49, 26, 30, -1, -65, -7, -42, -21, 4, 80, -6, 69, 10, 6, 37, -19, -20, 40, -44, 13, 11, -70, -30, -35, -16, 11, -32, -6, -21, -56, 10, 19, -24, 5, -42, -21, -12, -18, -25, -7, 18, 2, -38, -14, -22, -16, -32, -24, -30, -50, -13, -45, 2, 14, 19, -79, -27, 40, -2, -1, -76, -20, 5, -21, -8, -3, -16, 2, -14, 7, 54, -15, -34, -4, -36, -33, 19, -42, 50, -23, -19, 21, 28, 6, -33, -21, -6, 47, -14, -4, 31, -32, 70, -42, -62, -25, 1, 19, 16, -12, -16, -31, -33, -34, 24, -72, 2, 5, 1, -34, 6, -32, -36, -18, -53, -13, -46, -5, -9, -48, 16, -13, -6, 33, -38, -46, -24, -52, 5, -37, -6, 51, -13, -5, 32, 34, -27, 8, 9, -58, -20, -60, -29, -30, -26, -40, -46, 6, 16, -42, -2, -21, -28, 0, 0, 41, -49, 13, -12, 13, -40, -12, -1, -2, 31, 11, -8, 11, -20, -7, -23, 24, -1, 12, -39, -26, 16, -13, -6, 17, 9, -31, -31, 0, 2, -54, -40, -6, -14, -32, 10, 30, 25, 12, -24, 9, -19, -20, 31, -22, 16, -37, -20, -25, -2, -12, -27, 19, 8, -43, 18, 12, -5, 10, -56, 46, -9, -19, 12, -63, -22, 11, 19, 7, -13, 49, -37, -18, 42, -28, 37, 20, -4, -53, 9, -4, 14, 10, -1, -42, 10, 38, 23, -37, -24, 6, -18, 5, 33, 2, -2, -2, 10, -18, 51, 9, -31, 3, -6, 16, -4, -21, -22, 7, -9, -16, -7, -3, -51, 9, -16, -18, -52, -27, 31, 38, 48, 23, -7, 30, 23, 29, -30, -4, -4, 37, -49, 18, 8, -57, 25, -1, 33, -27, -11, -23, 24, -30, 8, -67, 27, -9, -24, -21, -1, 24, -12, 0, -29, 61, 8, 15, 18, 32, -26, -31, -5, 23, 47, -7, 15, 31, 17, -40, -9, 53, -28, 24, -4, -14, 54, -4, 37, -46, -28, 14, -15, -9, -25, 7, -43, -28, -36, -17, 31, -35, -13, 6, 20, -18, -10, -29, 19, 6, -64, 33, 8, -18, 13, 0, -35, 51, 10, 9, -33, 13, 29, -5, 8, -8, -46, -7, -15, 11, 68, 11, 12, 14, 22, -27, -16, -55, 10, 21, -62, -12, 2, 13, 15, 24, -27, 3, 32, -1, 1, -28, -67, 14, -5, 2, -18, -8, 9, -48, 7, -15, 37, 32, -30, 24, -6, 0, -18, -35, 33, 20, -3, -49, -13, 0, 9, -26, 7, -22, 2, -29, 4, 11, -37, -22, -25, 44, 48, 13, -47, 13, -19, -34, 38, -9, -69, -2, -3, -5, 29, -17, 11, 29, 41, -22, 16, -57, -19, 9, -17, 1, -20, 29, 13, -27, 25, 1, -5, -23, 9, 9, -13, -44, -42, -11, 38, 26, 4, -36, 33, 20, 5, -33, -38, -19, 31, 14, -38, -39, -42, 13, -14, 38, -24, -7, -27, 42, 27, 24, 32, -3, 40, -9, -62, -24, 22, -11, -15, 42, 38, -33, 11, 22, -15, -65, -60, 0, -26, 4, 6, 3, 42, -4, 1, -22, -6, 24, -33, 31, -36, -34, 4, -18, -29, 4, -14, 20, 39, 5, -28, -32, 7, 11, -40, -48, -1, 7, -13, 16, 18, 35, -21, 0, -36, -4, -7, 35, 21, -15, -6, -31, -18, 19, 5, -39, 8, 4, 0, 1, -18, -10, -62, 5, -25, -19, 18, 36, -16, 49, -33, 6, -2, 30, -15, -10, -24, 1, -26, -25, 33, -23, 17, 8, -26, -40, 4, 4, -23, -2, -79, 19, -82, 47, -66, 8, 13, -18, 51, -38, 3, 18, 28, -6, -1, -55, -36, -17, -21, 60, -15, -32, -52, 8, -41, 11, -31, -7, -1, -24, -53, -55, 11, -13, 1, 9, 21, 1, -50, -19, -37, 0, -41, -5, 9, -2, 8, 7, 20, -46, 39, -9, 24, -28, 0, 40, -73, 30, -54, -6, -29, 6, -58, 12, 2, 1, -21, -46, 11, 2, -83, -51, -8, 12, -49, 29, 4, 53, -42, -20, 20, -23, 43, -26, 47, 11, -55, -30, 15, 18, 10, -37, 3, 4, 30, -5, 23, -40, -1, 32, -35, 0, 11, -4, 23, 6, -8, -17, -33, 24, 26, -12, -25, 3, -52, -10, -26, 11, -27, -24, 50, 5, 56, -49, 31, -43, 18, -20, -20, -4, 2, 35, -16, 39, -53, -29, 30, -5, -11, 4, -74, 13, 35, 5, 8, -40, 2, 13, -9, 1, -20, -28, 21, -43, -20, -23, -109, -21, 17, -26, -28, -8, 15, -15, 9, 30, 10, 17, -27, -2, -13, -57, -21, 17, -22, -39, -8, 9, 12, -9, -17, 17, -15, 14, -57, -34, -8, 6, -35, 13, -41, -2, 20, -3, 2, -4, -22, -29, 38, 18, -5, -33, 1, 8, -5, -47, -7, -12, 13, 12, 27, -33, -30, 15, -51, -19, -19, -13, 56, -12, 4, 28, -56, -41, 34, -40, 21, 5, -36, -11, 26, -4, 24, 21, 42, -11, 34, 10, -10, -13, -7, -14, 12, -15, 14, -25, -41, -16, 70, 1, -23, -2, -40, -30, -66, -55, 0, 31, 44, 6, -53, -42, -20, -41, 0, 9, 24, -43, -20, 2, 23, -18, -19, 44, -22, 20, -14, 0, -58, -31, 27, -3, -5, -31, -8, -33, 23, 2, 34, -34, -23, -24, 38, -37, 22, 4, -65, 41, -84, -58, -4, -1, -11, 6, 21, 21, 23, -30, -18, 8, 1, 42, -28, 4, -14, -23, -22, 42, -3, 18, 18, 35, 1, -16, 26, -30, -14, -16, 8, 28, 53, -67, 30, -21, 8, 3, 30, 9, -14, 7, -13, 18, 13, -48, -66, 30, -4, -42, -37, -39, 17, -3, -18, -18, 23, -64, 15, 34, 44, -16, 19, 1, -9, 1, 36, 39, 41, -50, 4, -20, -18, -25, 18, -19, 13, -29, 55, 5, -33, 9, 26, 25, -23, 28, 1, 28, -41, -24, -67, -1, -24, 19, 1, 33, -49, -29, 24, -22, -7, -59, -15, -48, 8, -40, -51, -36, 4, -32, -14, 18, 30, 34, -62, -4, -64, 26, -15, -16, -51, 0, -51, 50, -58, -49, -22, -32, 33, -60, 45, -50, -13, -69, 25, -23, -27, -47, 21, -26, -1, 48, -19, 58, -59, -23, 6, 3, -77, 15, -35, 8, -31, -5, -19, -60, -13, -42, 70, -25, 19, -5, 10, -18, -14, -80, -25, -39, -49, 14, -4, -3, 10, 55, -28, 14, -36, -20, -46, 3, -14, -15, -17, 30, -7, -68, 9, 1, 37, -47, -27, -15, -28, 0, -3, -18, -46, 11, -9, 9, -24, 31, -11, 40, -38, 14, 0, 18, -23, -12, -5, -9, 22, -9, -39, 35, 1, 42, 38, 31, 13, -64, -12, -55, 20, -58, -23, -22, -14, -8, -28, 9, 14, 72, -35, 17, -46, 0, -42, 26, -19, 14, -13, -23, -2, 29, 35, 15, 69, -47, -33, 16, 47, -23, 1, -39, -33, -36, 48, -7, -68, 32, 25, -7, 24, -22, 6, 4, 11, -12, -18, 8, 12, -17, -24, 9, 35, 28, 90, 3, 5, -8, 7, -36, 37, -23, 0, 30, -12, -52, -25, 53, 22, 49, 17, 29, -13, 75, -26, 11, -45, -42, 33, -15, -25, -76, 11, 19}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_BIAS_0 {23, 2, -14, -26, -2, -42, -31, -83, -10, -37, -30, -54, 65}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {9}

#define DENSE_BIAS_LSHIFT {1}

#define DENSE_OUTPUT_RSHIFT {9}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 4
#define INPUT_1_OUTPUT_OFFSET 0
#define CONV1D_OUTPUT_DEC 3
#define CONV1D_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_OUTPUT_DEC 3
#define LEAKY_RE_LU_OUTPUT_OFFSET 0
#define CONV1D_1_OUTPUT_DEC 2
#define CONV1D_1_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_1_OUTPUT_DEC 2
#define LEAKY_RE_LU_1_OUTPUT_OFFSET 0
#define FLATTEN_OUTPUT_DEC 2
#define FLATTEN_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 1
#define DENSE_OUTPUT_OFFSET 0
#define DROPOUT_OUTPUT_DEC 1
#define DROPOUT_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[300] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {150, 2};
const nnom_qformat_param_t tensor_input_1_dec[] = {4};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_conv1d_kernel_0_data[] = TENSOR_CONV1D_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_kernel_0_dim[] = {3, 2, 30};
const nnom_qformat_param_t tensor_conv1d_kernel_0_dec[] = TENSOR_CONV1D_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_kernel_0 = {
    .p_data = (void*)tensor_conv1d_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_bias_0_data[] = TENSOR_CONV1D_BIAS_0;

const nnom_shape_data_t tensor_conv1d_bias_0_dim[] = {30};
const nnom_qformat_param_t tensor_conv1d_bias_0_dec[] = TENSOR_CONV1D_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_bias_0 = {
    .p_data = (void*)tensor_conv1d_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_output_shift[] = CONV1D_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_bias_shift[] = CONV1D_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_config = {
    .super = {.name = "conv1d"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_bias_shift, 
    .filter_size = 30,
    .kernel_size = {3},
    .stride_size = {3},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};
const int8_t tensor_conv1d_1_kernel_0_data[] = TENSOR_CONV1D_1_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_1_kernel_0_dim[] = {3, 30, 15};
const nnom_qformat_param_t tensor_conv1d_1_kernel_0_dec[] = TENSOR_CONV1D_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_1_kernel_0 = {
    .p_data = (void*)tensor_conv1d_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_1_bias_0_data[] = TENSOR_CONV1D_1_BIAS_0;

const nnom_shape_data_t tensor_conv1d_1_bias_0_dim[] = {15};
const nnom_qformat_param_t tensor_conv1d_1_bias_0_dec[] = TENSOR_CONV1D_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_1_bias_0 = {
    .p_data = (void*)tensor_conv1d_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_1_output_shift[] = CONV1D_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_1_bias_shift[] = CONV1D_1_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_1_config = {
    .super = {.name = "conv1d_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_1_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_1_bias_shift, 
    .filter_size = 15,
    .kernel_size = {3},
    .stride_size = {3},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};

const nnom_flatten_config_t flatten_config = {
    .super = {.name = "flatten"}
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {255, 13};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {13};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[13] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {13};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[9];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(conv2d_s(&conv1d_config), layer[0]);
	layer[2] = model.active(act_leaky_relu(0.300000f), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv1d_1_config), layer[2]);
	layer[4] = model.active(act_leaky_relu(0.300000f), layer[3]);
	layer[5] = model.hook(flatten_s(&flatten_config), layer[4]);
	layer[6] = model.hook(dense_s(&dense_config), layer[5]);
	layer[7] = model.hook(softmax_s(&softmax_config), layer[6]);
	layer[8] = model.hook(output_s(&output0_config), layer[7]);
	model_compile(&model, layer[0], layer[8]);
	return &model;
}
